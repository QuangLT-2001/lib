{"ast":null,"code":"import { call, takeEvery, takeLatest, all, delay, fork, put } from 'redux-saga/effects';\nimport { getProductsSuccess, getProductsFailed } from './actions';\nimport { GET_PRODUCTS_REQUEST } from './constants';\nimport { getListProductApi } from './service';\n\nfunction* getListProductProcess(params) {\n  try {\n    const respon = yield call(getListProductApi);\n\n    if (respon.status === 200) {\n      yield put(getListProductSuccess(respon.data)); // dispatch action to reducer\n    } else {\n      yield put(getListProductFailed());\n    }\n  } catch (err) {\n    yield put(getListProductFailed());\n  }\n}\n\nfunction* watchGetListProduct() {\n  yield takeLatest(GET_LIST_PRODUCT_REQUEST, getListProductProcess);\n}\n\nfunction* watchAll() {\n  yield all([watchGetListProduct()]);\n  console.log('call saga');\n}\n\nexport default watchAll;","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/Home/saga.js"],"names":["call","takeEvery","takeLatest","all","delay","fork","put","getProductsSuccess","getProductsFailed","GET_PRODUCTS_REQUEST","getListProductApi","getListProductProcess","params","respon","status","getListProductSuccess","data","getListProductFailed","err","watchGetListProduct","GET_LIST_PRODUCT_REQUEST","watchAll","console","log"],"mappings":"AAAA,SACEA,IADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,GAPF,QAQO,oBARP;AASA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,WAAtD;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,SAASC,iBAAT,QAAkC,WAAlC;;AACA,UAAUC,qBAAV,CAAgCC,MAAhC,EAAwC;AACtC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMb,IAAI,CAACU,iBAAD,CAAzB;;AACA,QAAIG,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACzB,YAAMR,GAAG,CAACS,qBAAqB,CAACF,MAAM,CAACG,IAAR,CAAtB,CAAT,CADyB,CAEzB;AACD,KAHD,MAGM;AACJ,YAAMV,GAAG,CAACW,oBAAoB,EAArB,CAAT;AACD;AACF,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,UAAMZ,GAAG,CAACW,oBAAoB,EAArB,CAAT;AACD;AACF;;AACD,UAAUE,mBAAV,GAAgC;AAC9B,QAAMjB,UAAU,CAACkB,wBAAD,EAA2BT,qBAA3B,CAAhB;AACD;;AACD,UAAUU,QAAV,GAAqB;AACnB,QAAMlB,GAAG,CAAC,CAACgB,mBAAmB,EAApB,CAAD,CAAT;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACD,eAAeF,QAAf","sourcesContent":["import {\r\n  call,\r\n  takeEvery,\r\n  takeLatest,\r\n  all,\r\n  delay,\r\n  fork,\r\n  put\r\n} from 'redux-saga/effects';\r\nimport { getProductsSuccess, getProductsFailed } from './actions'\r\nimport { GET_PRODUCTS_REQUEST } from './constants';\r\nimport { getListProductApi } from './service'\r\nfunction* getListProductProcess(params) {\r\n  try {\r\n    const respon = yield call(getListProductApi);\r\n    if (respon.status === 200) {\r\n      yield put(getListProductSuccess(respon.data));\r\n      // dispatch action to reducer\r\n    }else {\r\n      yield put(getListProductFailed())\r\n    }\r\n  } catch (err) {\r\n    yield put(getListProductFailed());\r\n  }\r\n}\r\nfunction* watchGetListProduct() {\r\n  yield takeLatest(GET_LIST_PRODUCT_REQUEST, getListProductProcess)\r\n}\r\nfunction* watchAll() {\r\n  yield all([watchGetListProduct()]);\r\n  console.log('call saga');\r\n}\r\nexport default watchAll;"]},"metadata":{},"sourceType":"module"}