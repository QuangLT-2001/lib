{"ast":null,"code":"import { call, takeLatest, takeEvery, put, all, fork, delay } from \"redux-saga/effects\";\nimport { getProductDetailSuccess, getProductDetailFailed, getListProductSuccess, getListProductFailed, postProductToCartSuccess, postProductToCartFailed } from \"./action\";\nimport { getProductDetailApi, getListProductApi, postProductToCartApi } from \"./service\";\nimport { GET_PRODUCT_DETAIL_REQUEST, GET_LIST_PRODUCT_REQUEST, POST_PRODUCT_TO_CART_REQUEST } from './contants';\n\nfunction* getProductDetailProcess(params) {\n  try {\n    const {\n      data: id,\n      type\n    } = params;\n    const respon = yield call(getProductDetailApi, id);\n\n    if (respon.status === 200 || respon.status === 201) {\n      yield put(getProductDetailSuccess(respon.data));\n    } else {\n      yield put(getProductDetailFailed());\n    }\n  } catch (err) {\n    yield put(getProductDetailFailed(err));\n  }\n}\n\nfunction* watchGetProductDetail() {\n  yield takeLatest(GET_PRODUCT_DETAIL_REQUEST, getProductDetailProcess);\n}\n\nfunction* getListProductProcess(params) {\n  try {\n    const respon = yield call(getListProductApi);\n\n    if (respon.status === 200 || respon.status === 201) {\n      yield put(getListProductSuccess(respon.data));\n    } else {\n      yield put(getProductDetailFailed());\n    }\n  } catch (err) {\n    yield put(getProductDetailFailed());\n  }\n}\n\nfunction* watchGetListProduct() {\n  yield takeLatest(GET_LIST_PRODUCT_REQUEST, getListProductProcess);\n}\n\nfunction* postProductToCartProcess(params) {\n  try {\n    const {\n      data: product\n    } = {\n      params\n    };\n    const respon = yield call(postProductToCartApi, product);\n    console.log(respon);\n  } catch (err) {}\n}\n\nfunction* watchPostProductToCart() {\n  yield takeLatest(POST_PRODUCT_TO_CART_REQUEST, postProductToCartProcess);\n}\n\nfunction* watchAll() {\n  yield all([watchGetProductDetail(), watchGetListProduct(), watchPostProductToCart()]);\n}\n\nexport default watchAll;","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/Detail/saga.js"],"names":["call","takeLatest","takeEvery","put","all","fork","delay","getProductDetailSuccess","getProductDetailFailed","getListProductSuccess","getListProductFailed","postProductToCartSuccess","postProductToCartFailed","getProductDetailApi","getListProductApi","postProductToCartApi","GET_PRODUCT_DETAIL_REQUEST","GET_LIST_PRODUCT_REQUEST","POST_PRODUCT_TO_CART_REQUEST","getProductDetailProcess","params","data","id","type","respon","status","err","watchGetProductDetail","getListProductProcess","watchGetListProduct","postProductToCartProcess","product","console","log","watchPostProductToCart","watchAll"],"mappings":"AAAA,SACEA,IADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,GAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,KAPF,QAQO,oBARP;AASA,SACEC,uBADF,EAEEC,sBAFF,EAGEC,qBAHF,EAIEC,oBAJF,EAKEC,wBALF,EAMEC,uBANF,QAOO,UAPP;AAQA,SACEC,mBADF,EAEEC,iBAFF,EAGEC,oBAHF,QAIO,WAJP;AAKA,SACEC,0BADF,EAEEC,wBAFF,EAGEC,4BAHF,QAIO,YAJP;;AAKA,UAAUC,uBAAV,CAAkCC,MAAlC,EAA0C;AACxC,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAEC,EAAR;AAAYC,MAAAA;AAAZ,QAAqBH,MAA3B;AACA,UAAMI,MAAM,GAAG,MAAMxB,IAAI,CAACa,mBAAD,EAAsBS,EAAtB,CAAzB;;AACA,QAAIE,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAgB,GAA7C,EAAkD;AAChD,YAAMtB,GAAG,CAACI,uBAAuB,CAACiB,MAAM,CAACH,IAAR,CAAxB,CAAT;AACD,KAFD,MAEO;AACL,YAAMlB,GAAG,CAACK,sBAAsB,EAAvB,CAAT;AACD;AACF,GARD,CAQE,OAAOkB,GAAP,EAAY;AAEZ,UAAMvB,GAAG,CAACK,sBAAsB,CAACkB,GAAD,CAAvB,CAAT;AACD;AACF;;AACD,UAAUC,qBAAV,GAAkC;AAChC,QAAM1B,UAAU,CAACe,0BAAD,EAA6BG,uBAA7B,CAAhB;AACD;;AAED,UAAUS,qBAAV,CAAgCR,MAAhC,EAAwC;AACtC,MAAI;AACF,UAAMI,MAAM,GAAG,MAAMxB,IAAI,CAACc,iBAAD,CAAzB;;AACA,QAAGU,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAiB,GAA7C,EAAkD;AAChD,YAAMtB,GAAG,CAACM,qBAAqB,CAACe,MAAM,CAACH,IAAR,CAAtB,CAAT;AACD,KAFD,MAEM;AACJ,YAAMlB,GAAG,CAACK,sBAAsB,EAAvB,CAAT;AACD;AACF,GAPD,CAOE,OAAOkB,GAAP,EAAY;AACZ,UAAMvB,GAAG,CAACK,sBAAsB,EAAvB,CAAT;AACD;AACF;;AACD,UAAUqB,mBAAV,GAAgC;AAC9B,QAAM5B,UAAU,CAACgB,wBAAD,EAA2BW,qBAA3B,CAAhB;AACD;;AACD,UAAUE,wBAAV,CAAmCV,MAAnC,EAA2C;AACzC,MAAI;AACF,UAAM;AAACC,MAAAA,IAAI,EAAEU;AAAP,QAAkB;AAACX,MAAAA;AAAD,KAAxB;AACA,UAAMI,MAAM,GAAG,MAAMxB,IAAI,CAACe,oBAAD,EAAuBgB,OAAvB,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAaT,MAAb;AACD,GAJD,CAIC,OAAOE,GAAP,EAAY,CAAE;AAChB;;AACD,UAAUQ,sBAAV,GAAmC;AACjC,QAAMjC,UAAU,CAACiB,4BAAD,EAA+BY,wBAA/B,CAAhB;AACD;;AACD,UAAUK,QAAV,GAAqB;AACnB,QAAM/B,GAAG,CAAC,CACRuB,qBAAqB,EADb,EAERE,mBAAmB,EAFX,EAGRK,sBAAsB,EAHd,CAAD,CAAT;AAKD;;AAED,eAAeC,QAAf","sourcesContent":["import {\r\n  call,\r\n  takeLatest,\r\n  takeEvery,\r\n  put,\r\n  all,\r\n  fork,\r\n  delay\r\n} from \"redux-saga/effects\";\r\nimport {\r\n  getProductDetailSuccess,\r\n  getProductDetailFailed,\r\n  getListProductSuccess,\r\n  getListProductFailed,\r\n  postProductToCartSuccess,\r\n  postProductToCartFailed\r\n} from \"./action\";\r\nimport {\r\n  getProductDetailApi,\r\n  getListProductApi,\r\n  postProductToCartApi\r\n} from \"./service\";\r\nimport {\r\n  GET_PRODUCT_DETAIL_REQUEST,\r\n  GET_LIST_PRODUCT_REQUEST,\r\n  POST_PRODUCT_TO_CART_REQUEST\r\n} from './contants';\r\nfunction* getProductDetailProcess(params) {\r\n  try {\r\n    const { data: id, type } = params;\r\n    const respon = yield call(getProductDetailApi, id)\r\n    if (respon.status === 200 || respon.status===201) {\r\n      yield put(getProductDetailSuccess(respon.data));\r\n    } else {\r\n      yield put(getProductDetailFailed())\r\n    }\r\n  } catch (err) {\r\n\r\n    yield put(getProductDetailFailed(err))\r\n  }\r\n}\r\nfunction* watchGetProductDetail() {\r\n  yield takeLatest(GET_PRODUCT_DETAIL_REQUEST, getProductDetailProcess);\r\n}\r\n\r\nfunction* getListProductProcess(params) {\r\n  try {\r\n    const respon = yield call(getListProductApi);\r\n    if(respon.status === 200 || respon.status=== 201) {\r\n      yield put(getListProductSuccess(respon.data))\r\n    }else {\r\n      yield put(getProductDetailFailed())\r\n    }\r\n  } catch (err) {\r\n    yield put(getProductDetailFailed())\r\n  }\r\n}\r\nfunction* watchGetListProduct() {\r\n  yield takeLatest(GET_LIST_PRODUCT_REQUEST, getListProductProcess);\r\n}\r\nfunction* postProductToCartProcess(params) {\r\n  try {\r\n    const {data: product} = {params}\r\n    const respon = yield call(postProductToCartApi, product);\r\n    console.log( respon);\r\n  }catch (err) {}\r\n}\r\nfunction* watchPostProductToCart() {\r\n  yield takeLatest(POST_PRODUCT_TO_CART_REQUEST, postProductToCartProcess)\r\n}\r\nfunction* watchAll() {\r\n  yield all([\r\n    watchGetProductDetail(),\r\n    watchGetListProduct(),\r\n    watchPostProductToCart()\r\n  ])\r\n}\r\n\r\nexport default watchAll;"]},"metadata":{},"sourceType":"module"}