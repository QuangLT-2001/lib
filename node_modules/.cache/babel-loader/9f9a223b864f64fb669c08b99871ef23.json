{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai lieu\\\\ReactJS\\\\shop-clothes - Copy\\\\src\\\\container\\\\PostDetail\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { LeftPostDetailWrapper, MainPostDetailWrapper, PostDetailWrapper, RelateNewsWrapper } from \"./style\";\nimport { getPostDetailRequest, getListPostRequest } from \"./actions\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { selectPostDetail, selectPosts, selectIsLoading, selectError } from \"./selector\";\nimport Loading from \"../Components/Loading\";\nimport PostCareItem from \"./PostCareItem\";\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = props => {\n  _s();\n\n  const {\n    match: {\n      params: {\n        id\n      }\n    },\n    handleGetPostDetail,\n    postDetail,\n    posts,\n    isLoading,\n    error,\n    handleGetListPost\n  } = props;\n  useEffect(() => {\n    handleGetPostDetail(+id);\n    handleGetListPost();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  const {\n    avatar,\n    createdAt,\n    description,\n    name,\n    subImage\n  } = postDetail;\n  let listPost = [];\n\n  _.forEach(posts, item => {\n    listPost = [...listPost, posts[Math.floor(Math.random() * posts.length)]];\n  });\n\n  const uniqPost = _.uniqBy(listPost, \"id\");\n\n  return /*#__PURE__*/_jsxDEV(PostDetailWrapper, {\n    className: \"post-detail\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(MainPostDetailWrapper, {\n        className: \"main-post-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"name-post\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Shoppanda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time-item\",\n            children: createdAt.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), description.map(item => {\n          const {\n            name,\n            desc,\n            type,\n            id\n          } = item;\n          return !type ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"descript\",\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this) : type === \"heading\" ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"indexing\",\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: name,\n              alt: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"desc-image\",\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftPostDetailWrapper, {\n        className: \"left-post-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: \"co\\u0301 th\\xEA\\u0309 ba\\u0323n quan t\\xE2m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-post-care\",\n          children: uniqPost.map(item => {\n            return /*#__PURE__*/_jsxDEV(PostCareItem, {\n              postCareItem: item\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), subImage.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.src,\n            alt: \"\"\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RelateNewsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: posts.map(item => {\n            return /*#__PURE__*/_jsxDEV(PostItem, {\n              className: \"col-lg-3 col-md-4 col-sm-6 col-12\",\n              postItem: item,\n              onClick: () => handleClickToPostDetail(item.id)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), \">\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetail, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PostDetail;\n\nconst mapStateToProps = state => {\n  return {\n    postDetail: selectPostDetail(state),\n    posts: selectPosts(state),\n    isLoading: selectIsLoading(state),\n    error: selectError(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleGetPostDetail: data => dispatch(getPostDetailRequest(data)),\n    handleGetListPost: () => dispatch(getListPostRequest())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/PostDetail/index.js"],"names":["React","LeftPostDetailWrapper","MainPostDetailWrapper","PostDetailWrapper","RelateNewsWrapper","getPostDetailRequest","getListPostRequest","connect","useEffect","selectPostDetail","selectPosts","selectIsLoading","selectError","Loading","PostCareItem","_","PostDetail","props","match","params","id","handleGetPostDetail","postDetail","posts","isLoading","error","handleGetListPost","avatar","createdAt","description","name","subImage","listPost","forEach","item","Math","floor","random","length","uniqPost","uniqBy","slice","map","desc","type","src","handleClickToPostDetail","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { LeftPostDetailWrapper, MainPostDetailWrapper, PostDetailWrapper, RelateNewsWrapper } from \"./style\";\r\nimport {\r\n  getPostDetailRequest,\r\n  getListPostRequest\r\n} from \"./actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  selectPostDetail,\r\n  selectPosts,\r\n  selectIsLoading,\r\n  selectError\r\n} from \"./selector\"\r\nimport Loading from \"../Components/Loading\";\r\nimport PostCareItem from \"./PostCareItem\";\r\nimport _ from 'lodash'\r\nconst PostDetail = props => {\r\n  const {\r\n    match: { params: { id } },\r\n    handleGetPostDetail,\r\n    postDetail,\r\n    posts,\r\n    isLoading,\r\n    error,\r\n    handleGetListPost\r\n  } = props;\r\n  useEffect(() => {\r\n    handleGetPostDetail(+id);\r\n    handleGetListPost()\r\n  }, []);\r\n  if (isLoading) return <Loading />\r\n  const {\r\n    avatar,\r\n    createdAt,\r\n    description,\r\n    name,\r\n    subImage\r\n  } = postDetail;\r\n  let listPost = [];\r\n  _.forEach(posts, item => {\r\n    listPost = [...listPost, posts[Math.floor(Math.random() * posts.length)]]\r\n  })\r\n  const uniqPost = _.uniqBy(listPost, \"id\")\r\n  return (\r\n    <PostDetailWrapper className=\"post-detail\">\r\n      <div className=\"container\">\r\n        <MainPostDetailWrapper className=\"main-post-detail\">\r\n          <img src={avatar} alt=\"\" />\r\n          <h3 className=\"name-post\">\r\n            {name}\r\n          </h3>\r\n          <p className=\"time\">\r\n            <span>Shoppanda</span>\r\n            <span className=\"time-item\">\r\n              {createdAt.slice(0, 10)}\r\n            </span>\r\n          </p>\r\n          {description.map(item => {\r\n            const { name, desc, type, id } = item;\r\n            return (\r\n              !type ? <p className=\"descript\" key={id}>\r\n                {name}\r\n              </p> :\r\n                (type === \"heading\" ?\r\n                  <h5\r\n                    className=\"indexing\"\r\n                    key={id}\r\n                  >\r\n                    {name}\r\n                  </h5> :\r\n                  <div\r\n                    className=\"image-post\"\r\n                    key={id}\r\n                  >\r\n                    <img src={name} alt=\"name\" />\r\n                    <p className=\"desc-image\">\r\n                      {desc}\r\n                    </p>\r\n                  </div>)\r\n            );\r\n          })}\r\n        </MainPostDetailWrapper>\r\n        <LeftPostDetailWrapper className=\"left-post-detail\">\r\n          <h3 className=\"title\">\r\n            có thể bạn quan tâm\r\n          </h3>\r\n          <div className=\"list-post-care\">\r\n            {uniqPost.map(item => {\r\n              return <PostCareItem postCareItem={item} key={item.id} />\r\n            })}\r\n          </div>\r\n          {subImage.map(item => {\r\n            return <img src={item.src} alt=\"\" key={item.id} />\r\n          })}\r\n        </LeftPostDetailWrapper>\r\n        <RelateNewsWrapper>\r\n          <div className=\"row\">\r\n            {posts.map(item => {\r\n              return <PostItem\r\n                className=\"col-lg-3 col-md-4 col-sm-6 col-12\"\r\n                postItem={item}\r\n                key={item.id}\r\n                onClick={() => handleClickToPostDetail(item.id)}\r\n              />\r\n            })}</div>>\r\n        </RelateNewsWrapper>\r\n      </div>\r\n    </PostDetailWrapper>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    postDetail: selectPostDetail(state),\r\n    posts: selectPosts(state),\r\n    isLoading: selectIsLoading(state),\r\n    error: selectError(state)\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleGetPostDetail: data => dispatch(getPostDetailRequest(data)),\r\n    handleGetListPost: () => dispatch(getListPostRequest())\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);"]},"metadata":{},"sourceType":"module"}