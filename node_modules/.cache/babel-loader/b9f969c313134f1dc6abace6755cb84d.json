{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai lieu\\\\ReactJS\\\\shop-clothes - Copy\\\\src\\\\container\\\\PostDetail\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { LeftPostDetailWrapper, MainPostDetailWrapper, PostDetailWrapper, RelateNewsWrapper } from \"./style\";\nimport { getPostDetailRequest, getListPostRequest } from \"./actions\";\nimport { connect } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { selectPostDetail, selectPosts, selectIsLoading, selectError } from \"./selector\";\nimport Loading from \"../Components/Loading\";\nimport PostCareItem from \"./Component/PostCareItem\";\nimport _ from 'lodash';\nimport PostItem from \"./../Home/Component/Post\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = props => {\n  _s();\n\n  const params = useParams();\n  const [currentRoot, setCurrentRoot] = useState(\"\");\n  const {\n    match: {\n      params: {\n        id\n      }\n    },\n    handleGetPostDetail,\n    postDetail,\n    posts,\n    isLoading,\n    error,\n    handleGetListPost,\n    history\n  } = props;\n  useEffect(() => {\n    setCurrentRoot(params.id);\n    handleGetPostDetail(id);\n    handleGetListPost();\n  }, [params]);\n  console.log('pa', currentRoot);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 25\n  }, this);\n  const {\n    avatar,\n    createdAt,\n    description,\n    name,\n    subImage,\n    id: idPost\n  } = postDetail;\n  console.log('post', postDetail);\n  let listPost = [];\n\n  _.forEach(posts, item => {\n    listPost = [...listPost, posts[Math.floor(Math.random() * posts.length)]];\n  });\n\n  const uniqPost = _.uniqBy(listPost, \"id\");\n\n  const handleClickToPostDetail = postId => {\n    history.push(`/tin-tuc/${postId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostDetailWrapper, {\n    className: \"post-detail\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(MainPostDetailWrapper, {\n        className: \"main-post-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"name-post\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Shoppanda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time-item\",\n            children: createdAt && createdAt.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), description.map(item => {\n          const {\n            name,\n            desc,\n            type,\n            id\n          } = item;\n          return !type ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"descript\",\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this) : type === \"heading\" ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"indexing\",\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: name,\n              alt: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"desc-image\",\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(LeftPostDetailWrapper, {\n        className: \"left-post-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: \"co\\u0301 th\\xEA\\u0309 ba\\u0323n quan t\\xE2m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-post-care\",\n          children: uniqPost.map(item => {\n            return /*#__PURE__*/_jsxDEV(PostCareItem, {\n              postCareItem: item\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), subImage.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.src,\n            alt: \"\"\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 18\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(RelateNewsWrapper, {\n        className: \"relate-news\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: posts.map(item => {\n            return /*#__PURE__*/_jsxDEV(PostItem, {\n              className: \"col-lg-3 col-md-4 col-sm-6 col-12\",\n              postItem: item,\n              onClick: () => handleClickToPostDetail(item.id)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }, this);\n};\n\n_s(PostDetail, \"qB0p2wrFFrCtKKWVneIxXk01uNo=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetail;\n\nconst mapStateToProps = state => {\n  return {\n    postDetail: selectPostDetail(state),\n    posts: selectPosts(state),\n    isLoading: selectIsLoading(state),\n    error: selectError(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleGetPostDetail: data => dispatch(getPostDetailRequest(data)),\n    handleGetListPost: () => dispatch(getListPostRequest())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/PostDetail/index.js"],"names":["React","LeftPostDetailWrapper","MainPostDetailWrapper","PostDetailWrapper","RelateNewsWrapper","getPostDetailRequest","getListPostRequest","connect","useEffect","useState","selectPostDetail","selectPosts","selectIsLoading","selectError","Loading","PostCareItem","_","PostItem","useParams","PostDetail","props","params","currentRoot","setCurrentRoot","match","id","handleGetPostDetail","postDetail","posts","isLoading","error","handleGetListPost","history","console","log","avatar","createdAt","description","name","subImage","idPost","listPost","forEach","item","Math","floor","random","length","uniqPost","uniqBy","handleClickToPostDetail","postId","push","slice","map","desc","type","src","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { LeftPostDetailWrapper, MainPostDetailWrapper, PostDetailWrapper, RelateNewsWrapper } from \"./style\";\r\nimport {\r\n  getPostDetailRequest,\r\n  getListPostRequest\r\n} from \"./actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  selectPostDetail,\r\n  selectPosts,\r\n  selectIsLoading,\r\n  selectError\r\n} from \"./selector\"\r\nimport Loading from \"../Components/Loading\";\r\nimport PostCareItem from \"./Component/PostCareItem\";\r\nimport _ from 'lodash';\r\nimport PostItem from \"./../Home/Component/Post\"\r\nimport {useParams} from \"react-router-dom\"\r\nconst PostDetail = props => {\r\n  const params = useParams();\r\n  const [currentRoot, setCurrentRoot] = useState(\"\");\r\n  const {\r\n    match: { params: { id } },\r\n    handleGetPostDetail,\r\n    postDetail,\r\n    posts,\r\n    isLoading,\r\n    error,\r\n    handleGetListPost,\r\n    history\r\n  } = props;\r\n  useEffect(() => {\r\n    setCurrentRoot(params.id);\r\n    handleGetPostDetail(id);\r\n    handleGetListPost();\r\n  }, [params]);\r\n  console.log('pa', currentRoot);\r\n  if (isLoading) return <Loading />\r\n  const {\r\n    avatar,\r\n    createdAt,\r\n    description,\r\n    name,\r\n    subImage,\r\n    id:idPost\r\n  } = postDetail;\r\n  console.log('post', postDetail);\r\n  let listPost = [];\r\n  _.forEach(posts, item => {\r\n    listPost = [...listPost, posts[Math.floor(Math.random() * posts.length)]]\r\n  })\r\n  const uniqPost = _.uniqBy(listPost, \"id\");\r\n  const handleClickToPostDetail = postId => {\r\n    history.push(`/tin-tuc/${postId}`);\r\n  }\r\n  return (\r\n     <PostDetailWrapper className=\"post-detail\">\r\n      <div className=\"container\">\r\n      <MainPostDetailWrapper className=\"main-post-detail\">\r\n        <img src={avatar} alt=\"\" />\r\n        <h3 className=\"name-post\">\r\n          {name}\r\n        </h3>\r\n        <p className=\"time\">\r\n          <span>Shoppanda</span>\r\n          <span className=\"time-item\">\r\n            {createdAt && createdAt.slice(0, 10)}\r\n          </span>\r\n        </p>\r\n        {description.map(item => {\r\n          const { name, desc, type, id } = item;\r\n          return (\r\n            !type ? <p className=\"descript\" key={id}>\r\n              {name}\r\n            </p> :\r\n              (type === \"heading\" ?\r\n                <h5\r\n                  className=\"indexing\"\r\n                  key={id}\r\n                >\r\n                  {name}\r\n                </h5> :\r\n                <div\r\n                  className=\"image-post\"\r\n                  key={id}\r\n                >\r\n                  <img src={name} alt=\"name\" />\r\n                  <p className=\"desc-image\">\r\n                    {desc}\r\n                  </p>\r\n                </div>)\r\n          );\r\n        })}\r\n      </MainPostDetailWrapper>\r\n      <LeftPostDetailWrapper className=\"left-post-detail\">\r\n        <h3 className=\"title\">\r\n          có thể bạn quan tâm\r\n        </h3>\r\n        <div className=\"list-post-care\">\r\n          {uniqPost.map(item => {\r\n            return <PostCareItem postCareItem={item} key={item.id} />\r\n          })}\r\n        </div>\r\n        {subImage.map(item => {\r\n          return <img src={item.src} alt=\"\" key={item.id} />\r\n        })}\r\n      </LeftPostDetailWrapper>\r\n      <RelateNewsWrapper className=\"relate-news\">\r\n        <div className=\"row\">\r\n          {posts.map(item => {\r\n            return <PostItem\r\n              className=\"col-lg-3 col-md-4 col-sm-6 col-12\"\r\n              postItem={item}\r\n              key={item.id}\r\n              onClick={() => handleClickToPostDetail(item.id)}\r\n            />\r\n          })}\r\n          </div>\r\n      </RelateNewsWrapper>\r\n    </div>\r\n  </PostDetailWrapper>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    postDetail: selectPostDetail(state),\r\n    posts: selectPosts(state),\r\n    isLoading: selectIsLoading(state),\r\n    error: selectError(state)\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleGetPostDetail: data => dispatch(getPostDetailRequest(data)),\r\n    handleGetListPost: () => dispatch(getListPostRequest())\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);"]},"metadata":{},"sourceType":"module"}