{"ast":null,"code":"import { all, takeEvery, takeLatest, put, call, delay } from \"redux-saga/effects\";\nimport { getListProductCartSuccess, getListProductCartFailed } from \"./actions\";\nimport { GET_LIST_PRODUCT_CART_REQUEST } from \"./contants\";\nimport { getListProductCartApi } from \"./service\";\n\nfunction* getListProductCartProcess(params) {\n  try {\n    const respon = yield call(getListProductCartApi);\n\n    if (respon.status === 200 || respon.status === 201) {\n      yield put(getListProductCartSuccess(respon.data));\n    } else {\n      yield put(getListProductCartFailed());\n    }\n  } catch (err) {\n    yield put(getListProductCartFailed());\n  }\n}\n\nfunction* watchGetListProductCart() {\n  yield takeEvery(GET_LIST_PRODUCT_CART_REQUEST, getListProductCartProcess);\n}\n\nfunction* watchAll() {\n  yield all([watchGetListProductCart()]);\n}\n\nexport default watchAll;","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/Cart/saga.js"],"names":["all","takeEvery","takeLatest","put","call","delay","getListProductCartSuccess","getListProductCartFailed","GET_LIST_PRODUCT_CART_REQUEST","getListProductCartApi","getListProductCartProcess","params","respon","status","data","err","watchGetListProductCart","watchAll"],"mappings":"AAAA,SACEA,GADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,KANF,QAOO,oBAPP;AAQA,SACEC,yBADF,EAEEC,wBAFF,QAGO,WAHP;AAIA,SACEC,6BADF,QAEO,YAFP;AAGA,SACEC,qBADF,QAEO,WAFP;;AAGA,UAAUC,yBAAV,CAAoCC,MAApC,EAA4C;AAC1C,MAAI;AACF,UAAMC,MAAM,GAAI,MAAMR,IAAI,CAACK,qBAAD,CAA1B;;AACA,QAAGG,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAkB,GAA9C,EAAmD;AACjD,YAAMV,GAAG,CAACG,yBAAyB,CAACM,MAAM,CAACE,IAAR,CAA1B,CAAT;AACD,KAFD,MAEM;AACJ,YAAMX,GAAG,CAACI,wBAAwB,EAAzB,CAAT;AACD;AACF,GAPD,CAOE,OAAOQ,GAAP,EAAY;AACZ,UAAMZ,GAAG,CAACI,wBAAwB,EAAzB,CAAT;AACD;AACF;;AACD,UAAUS,uBAAV,GAAoC;AAClC,QAAMf,SAAS,CAACO,6BAAD,EAAgCE,yBAAhC,CAAf;AACD;;AACD,UAAUO,QAAV,GAAqB;AACnB,QAAMjB,GAAG,CAAC,CACRgB,uBAAuB,EADf,CAAD,CAAT;AAGD;;AACD,eAAeC,QAAf","sourcesContent":["import {\r\n  all,\r\n  takeEvery,\r\n  takeLatest,\r\n  put,\r\n  call,\r\n  delay,\r\n} from \"redux-saga/effects\";\r\nimport {\r\n  getListProductCartSuccess,\r\n  getListProductCartFailed\r\n} from \"./actions\";\r\nimport {\r\n  GET_LIST_PRODUCT_CART_REQUEST\r\n} from \"./contants\";\r\nimport {\r\n  getListProductCartApi\r\n} from \"./service\";\r\nfunction* getListProductCartProcess(params) {\r\n  try {\r\n    const respon  = yield call(getListProductCartApi);\r\n    if(respon.status === 200 || respon.status === 201) {\r\n      yield put(getListProductCartSuccess(respon.data))\r\n    }else {\r\n      yield put(getListProductCartFailed())\r\n    }\r\n  } catch (err) {\r\n    yield put(getListProductCartFailed())\r\n  }\r\n}\r\nfunction* watchGetListProductCart() {\r\n  yield takeEvery(GET_LIST_PRODUCT_CART_REQUEST, getListProductCartProcess);\r\n}\r\nfunction* watchAll() {\r\n  yield all([\r\n    watchGetListProductCart()\r\n  ])\r\n}\r\nexport default watchAll;"]},"metadata":{},"sourceType":"module"}