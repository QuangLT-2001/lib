{"ast":null,"code":"import { call, takeLatest, takeEvery, put, all, fork } from \"redux-saga/effects\";\nimport { getListProductDetailSuccess, getListProductDetailFailed } from \"./action\";\nimport { getListProductDetailApi } from \"./service\";\nimport { GET_LIST_PRODUCT_DETAIL_REQUEST } from './contants';\n\nfunction* getListProductDetailProcess(params) {\n  try {\n    const {\n      data: id,\n      type\n    } = params;\n    const respon = yield call(getListProductDetailApi, id);\n\n    if (respon.status === 200) {\n      yield put(get);\n    }\n  } catch (err) {\n    console.log('err123', err);\n  }\n}\n\nfunction* watchGetListProductDetail() {\n  yield takeLatest(GET_LIST_PRODUCT_DETAIL_REQUEST, getListProductDetailProcess);\n}\n\nfunction* watchAll() {\n  yield all([watchGetListProductDetail()]);\n}\n\nexport default watchAll;","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/Detail/saga.js"],"names":["call","takeLatest","takeEvery","put","all","fork","getListProductDetailSuccess","getListProductDetailFailed","getListProductDetailApi","GET_LIST_PRODUCT_DETAIL_REQUEST","getListProductDetailProcess","params","data","id","type","respon","status","get","err","console","log","watchGetListProductDetail","watchAll"],"mappings":"AAAA,SACEA,IADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,GAJF,EAKEC,GALF,EAMEC,IANF,QAOO,oBAPP;AAQA,SACEC,2BADF,EAEEC,0BAFF,QAGO,UAHP;AAIA,SAAQC,uBAAR,QAAsC,WAAtC;AACA,SAAQC,+BAAR,QAA8C,YAA9C;;AACA,UAAUC,2BAAV,CAAsCC,MAAtC,EAA8C;AAC5C,MAAI;AACF,UAAM;AAACC,MAAAA,IAAI,EAAEC,EAAP;AAAUC,MAAAA;AAAV,QAAkBH,MAAxB;AACA,UAAMI,MAAM,GAAG,MAAMf,IAAI,CAACQ,uBAAD,EAA0BK,EAA1B,CAAzB;;AACA,QAAGE,MAAM,CAACC,MAAP,KAAkB,GAArB,EAA0B;AACxB,YAAMb,GAAG,CAACc,GAAD,CAAT;AACD;AACF,GAND,CAMC,OAAOC,GAAP,EAAY;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACD;AACF;;AACD,UAAUG,yBAAV,GAAsC;AACpC,QAAMpB,UAAU,CAACQ,+BAAD,EAAkCC,2BAAlC,CAAhB;AACD;;AACD,UAAUY,QAAV,GAAqB;AACnB,QAAMlB,GAAG,CAAC,CAACiB,yBAAyB,EAA1B,CAAD,CAAT;AACD;;AACD,eAAeC,QAAf","sourcesContent":["import {\r\n  call,\r\n  takeLatest,\r\n  takeEvery,\r\n  put,\r\n  all,\r\n  fork\r\n} from \"redux-saga/effects\";\r\nimport {\r\n  getListProductDetailSuccess,\r\n  getListProductDetailFailed\r\n} from \"./action\";\r\nimport {getListProductDetailApi} from \"./service\";\r\nimport {GET_LIST_PRODUCT_DETAIL_REQUEST} from './contants';\r\nfunction* getListProductDetailProcess(params) {\r\n  try {\r\n    const {data: id,type} = params;\r\n    const respon = yield call(getListProductDetailApi, id);\r\n    if(respon.status === 200) {\r\n      yield put(get)\r\n    }\r\n  }catch (err) {\r\n    console.log('err123', err);\r\n  }\r\n}\r\nfunction* watchGetListProductDetail() {\r\n  yield takeLatest(GET_LIST_PRODUCT_DETAIL_REQUEST, getListProductDetailProcess)\r\n}\r\nfunction* watchAll() {\r\n  yield all([watchGetListProductDetail()])\r\n}\r\nexport default watchAll;"]},"metadata":{},"sourceType":"module"}