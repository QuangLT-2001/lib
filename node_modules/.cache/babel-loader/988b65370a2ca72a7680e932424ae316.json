{"ast":null,"code":"import { call, takeLatest, takeEvery, put, fork, all, delay } from \"redux-saga/effects\";\nimport { GET_LIST_POST_REQUEST, GET_POST_ID_REQUEST } from \"./constants\";\nimport { getListPostSuccess, getListPostFailed, getPostIdSuccess, getPostIdFailed } from \"./actions\";\nimport { getListPostApi, getPostIdApi } from \"./service\";\n\nfunction* getListPostProcess(params) {\n  try {\n    const respon = yield call(getListPostApi);\n\n    if (respon.status === 200) {\n      yield put(getListPostSuccess(respon.data));\n    } else {\n      yield put(getListPostFailed());\n    }\n  } catch (err) {\n    yield put(getListPostFailed());\n  }\n}\n\nfunction* watchListPost() {\n  yield takeLatest(GET_LIST_POST_REQUEST, getListPostProcess);\n}\n\nfunction* watchAll() {\n  yield all([watchListPost()]);\n}\n\nexport default watchAll;","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/ListPost/saga.js"],"names":["call","takeLatest","takeEvery","put","fork","all","delay","GET_LIST_POST_REQUEST","GET_POST_ID_REQUEST","getListPostSuccess","getListPostFailed","getPostIdSuccess","getPostIdFailed","getListPostApi","getPostIdApi","getListPostProcess","params","respon","status","data","err","watchListPost","watchAll"],"mappings":"AAAA,SACEA,IADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,GANF,EAOEC,KAPF,QAQO,oBARP;AASA,SACEC,qBADF,EAEEC,mBAFF,QAGO,aAHP;AAIA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,gBAHF,EAIEC,eAJF,QAKO,WALP;AAMA,SACEC,cADF,EAEEC,YAFF,QAGO,WAHP;;AAIA,UAAUC,kBAAV,CAA6BC,MAA7B,EAAqC;AACnC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMjB,IAAI,CAACa,cAAD,CAAzB;;AACA,QAAII,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACzB,YAAMf,GAAG,CAACM,kBAAkB,CAACQ,MAAM,CAACE,IAAR,CAAnB,CAAT;AACD,KAFD,MAEO;AACL,YAAMhB,GAAG,CAACO,iBAAiB,EAAlB,CAAT;AACD;AAEF,GARD,CAQE,OAAOU,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAACO,iBAAiB,EAAlB,CAAT;AACD;AACF;;AACD,UAAUW,aAAV,GAA0B;AACxB,QAAMpB,UAAU,CAACM,qBAAD,EAAwBQ,kBAAxB,CAAhB;AACD;;AACD,UAAUO,QAAV,GAAqB;AACnB,QAAMjB,GAAG,CAAC,CACRgB,aAAa,EADL,CAAD,CAAT;AAGD;;AAED,eAAeC,QAAf","sourcesContent":["import {\r\n  call,\r\n  takeLatest,\r\n  takeEvery,\r\n  put,\r\n  fork,\r\n  all,\r\n  delay\r\n} from \"redux-saga/effects\";\r\nimport {\r\n  GET_LIST_POST_REQUEST,\r\n  GET_POST_ID_REQUEST\r\n} from \"./constants\";\r\nimport {\r\n  getListPostSuccess,\r\n  getListPostFailed,\r\n  getPostIdSuccess,\r\n  getPostIdFailed\r\n} from \"./actions\";\r\nimport {\r\n  getListPostApi,\r\n  getPostIdApi\r\n} from \"./service\";\r\nfunction* getListPostProcess(params) {\r\n  try {\r\n    const respon = yield call(getListPostApi);\r\n    if (respon.status === 200) {\r\n      yield put(getListPostSuccess(respon.data))\r\n    } else {\r\n      yield put(getListPostFailed())\r\n    }\r\n\r\n  } catch (err) {\r\n    yield put(getListPostFailed())\r\n  }\r\n}\r\nfunction* watchListPost() {\r\n  yield takeLatest(GET_LIST_POST_REQUEST, getListPostProcess);\r\n}\r\nfunction* watchAll() {\r\n  yield all([\r\n    watchListPost()\r\n  ])\r\n}\r\n\r\nexport default watchAll;"]},"metadata":{},"sourceType":"module"}