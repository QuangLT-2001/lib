{"ast":null,"code":"import { call, takeLatest, takeEvery, put, all, fork, delay } from \"redux-saga/effects\";\nimport { getProductDetailSuccess, getProductDetailFailed, getListProductSuccess, getListProductFailed } from \"./action\";\nimport { getProductDetailApi, getListProductApi } from \"./service\";\nimport { GET_PRODUCT_DETAIL_REQUEST, GET_LIST_PRODUCT_REQUEST } from './contants';\n\nfunction* getProductDetailProcess(params) {\n  try {\n    const {\n      data: id,\n      type\n    } = params;\n    const respon = yield call(getProductDetailApi, id);\n\n    if (respon.status === 200 || respon.status === 201) {\n      yield put(getProductDetailSuccess(respon.data));\n    } else {\n      yield put(getProductDetailFailed());\n    }\n  } catch (err) {\n    yield put(getProductDetailFailed(err));\n  }\n}\n\nfunction* watchGetProductDetail() {\n  yield takeLatest(GET_PRODUCT_DETAIL_REQUEST, getProductDetailProcess);\n}\n\nfunction* getListProductProcess(params) {\n  try {\n    const respon = yield call(getListProductApi);\n    console.log('cccccccccc======');\n\n    if (respon.status === 200 || respon.status === 201) {\n      yield put(getListProductSuccess(respon.data));\n    } else {\n      yield put(getProductDetailFailed());\n    }\n  } catch (err) {\n    yield put(getProductDetailFailed());\n  }\n}\n\nfunction* watchGetListProduct() {\n  yield takeLatest(GET_LIST_PRODUCT_REQUEST, getListProductProcess);\n}\n\nfunction* watchAll() {\n  yield all([watchGetProductDetail(), watchGetListProduct()]);\n}\n\nexport default watchAll;","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/Detail/saga.js"],"names":["call","takeLatest","takeEvery","put","all","fork","delay","getProductDetailSuccess","getProductDetailFailed","getListProductSuccess","getListProductFailed","getProductDetailApi","getListProductApi","GET_PRODUCT_DETAIL_REQUEST","GET_LIST_PRODUCT_REQUEST","getProductDetailProcess","params","data","id","type","respon","status","err","watchGetProductDetail","getListProductProcess","console","log","watchGetListProduct","watchAll"],"mappings":"AAAA,SACEA,IADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,GAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,KAPF,QAQO,oBARP;AASA,SACEC,uBADF,EAEEC,sBAFF,EAGEC,qBAHF,EAIEC,oBAJF,QAKO,UALP;AAMA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,WAAvD;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,YAArE;;AACA,UAAUC,uBAAV,CAAkCC,MAAlC,EAA0C;AACxC,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAEC,EAAR;AAAYC,MAAAA;AAAZ,QAAqBH,MAA3B;AACA,UAAMI,MAAM,GAAG,MAAMpB,IAAI,CAACW,mBAAD,EAAsBO,EAAtB,CAAzB;;AACA,QAAIE,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAgB,GAA7C,EAAkD;AAChD,YAAMlB,GAAG,CAACI,uBAAuB,CAACa,MAAM,CAACH,IAAR,CAAxB,CAAT;AACD,KAFD,MAEO;AACL,YAAMd,GAAG,CAACK,sBAAsB,EAAvB,CAAT;AACD;AACF,GARD,CAQE,OAAOc,GAAP,EAAY;AAEZ,UAAMnB,GAAG,CAACK,sBAAsB,CAACc,GAAD,CAAvB,CAAT;AACD;AACF;;AACD,UAAUC,qBAAV,GAAkC;AAChC,QAAMtB,UAAU,CAACY,0BAAD,EAA6BE,uBAA7B,CAAhB;AACD;;AAED,UAAUS,qBAAV,CAAgCR,MAAhC,EAAwC;AACtC,MAAI;AACF,UAAMI,MAAM,GAAG,MAAMpB,IAAI,CAACY,iBAAD,CAAzB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,QAAGN,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAiB,GAA7C,EAAkD;AAChD,YAAMlB,GAAG,CAACM,qBAAqB,CAACW,MAAM,CAACH,IAAR,CAAtB,CAAT;AACD,KAFD,MAEM;AACJ,YAAMd,GAAG,CAACK,sBAAsB,EAAvB,CAAT;AACD;AACF,GARD,CAQE,OAAOc,GAAP,EAAY;AACZ,UAAMnB,GAAG,CAACK,sBAAsB,EAAvB,CAAT;AACD;AACF;;AACD,UAAUmB,mBAAV,GAAgC;AAC9B,QAAM1B,UAAU,CAACa,wBAAD,EAA2BU,qBAA3B,CAAhB;AACD;;AACD,UAAUI,QAAV,GAAqB;AACnB,QAAMxB,GAAG,CAAC,CACRmB,qBAAqB,EADb,EAERI,mBAAmB,EAFX,CAAD,CAAT;AAID;;AAED,eAAeC,QAAf","sourcesContent":["import {\r\n  call,\r\n  takeLatest,\r\n  takeEvery,\r\n  put,\r\n  all,\r\n  fork,\r\n  delay\r\n} from \"redux-saga/effects\";\r\nimport {\r\n  getProductDetailSuccess,\r\n  getProductDetailFailed,\r\n  getListProductSuccess,\r\n  getListProductFailed\r\n} from \"./action\";\r\nimport { getProductDetailApi, getListProductApi } from \"./service\";\r\nimport { GET_PRODUCT_DETAIL_REQUEST, GET_LIST_PRODUCT_REQUEST } from './contants';\r\nfunction* getProductDetailProcess(params) {\r\n  try {\r\n    const { data: id, type } = params;\r\n    const respon = yield call(getProductDetailApi, id)\r\n    if (respon.status === 200 || respon.status===201) {\r\n      yield put(getProductDetailSuccess(respon.data));\r\n    } else {\r\n      yield put(getProductDetailFailed())\r\n    }\r\n  } catch (err) {\r\n\r\n    yield put(getProductDetailFailed(err))\r\n  }\r\n}\r\nfunction* watchGetProductDetail() {\r\n  yield takeLatest(GET_PRODUCT_DETAIL_REQUEST, getProductDetailProcess);\r\n}\r\n\r\nfunction* getListProductProcess(params) {\r\n  try {\r\n    const respon = yield call(getListProductApi);\r\n    console.log('cccccccccc======');\r\n    if(respon.status === 200 || respon.status=== 201) {\r\n      yield put(getListProductSuccess(respon.data))\r\n    }else {\r\n      yield put(getProductDetailFailed())\r\n    }\r\n  } catch (err) {\r\n    yield put(getProductDetailFailed())\r\n  }\r\n}\r\nfunction* watchGetListProduct() {\r\n  yield takeLatest(GET_LIST_PRODUCT_REQUEST, getListProductProcess);\r\n}\r\nfunction* watchAll() {\r\n  yield all([\r\n    watchGetProductDetail(),\r\n    watchGetListProduct()\r\n  ])\r\n}\r\n\r\nexport default watchAll;"]},"metadata":{},"sourceType":"module"}