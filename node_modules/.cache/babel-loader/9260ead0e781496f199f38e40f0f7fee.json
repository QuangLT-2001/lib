{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai lieu\\\\ReactJS\\\\shop-clothes - Copy\\\\src\\\\container\\\\Detail\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getProductDetailRequest, handleDecrement, handleIncrement, getListProductRequest } from \"./action\";\nimport { connect } from \"react-redux\";\nimport { selectDetail, selectIsLoading, selectError, selectCounter, selectProducts } from \"./selector\";\nimport Loading from \"../Components/Loading\";\nimport { SelectItems, DetailWrapper, IndicatorItems, ProductDetailWrapper, SelectDeliveryWrapper, DescriptionProductWrapper, DescriptContents, ImageProducts, ProductInvolveWrapper } from \"./style\";\nimport _, { forEach } from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight, faStar, faInfoCircle, faMoneyBillWave, faHistory, faBan, faMobileAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart, faHandshake } from \"@fortawesome/free-regular-svg-icons\";\nimport Button from \"./../../Component/Button\";\nimport { formatMoney } from \"./../../Component/Format\";\nimport Empty from \"../Components/Empty\";\nimport SellingItem from \"../Home/Component/SellingItem\";\nimport ProductItem from './../Home/Component/ProductItem';\nimport TitlePage from \"../../Component/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IndicatorItem = ({\n  indicatorItem,\n  active,\n  handleClickChangeIndex\n}) => {\n  const {\n    src\n  } = indicatorItem;\n  return /*#__PURE__*/_jsxDEV(IndicatorItems, {\n    onClick: handleClickChangeIndex,\n    className: `${active} indicator-item`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: \"indicator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = IndicatorItem;\n\nconst SelectItem = ({\n  selectItem,\n  active,\n  handleClickChangeSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(SelectItems, {\n    className: `select-item ${active}`,\n    onClick: handleClickChangeSelect,\n    children: selectItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SelectItem;\n\nconst DescriptContent = ({\n  descriptContent\n}) => {\n  const {\n    name\n  } = descriptContent;\n  return /*#__PURE__*/_jsxDEV(DescriptContents, {\n    className: \"descript-content\",\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = DescriptContent;\n\nconst ImageProduct = ({\n  imageProduct\n}) => {\n  const {\n    src\n  } = imageProduct;\n  return /*#__PURE__*/_jsxDEV(ImageProducts, {\n    src: src\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = ImageProduct;\n\nconst Detail = props => {\n  _s();\n\n  const {\n    handleGetProductDetail,\n    history,\n    match: {\n      params: {\n        id\n      }\n    },\n    detail,\n    isLoading,\n    error,\n    counter,\n    handleIncrement,\n    handleDecrement,\n    handleGetListProducts,\n    products\n  } = props;\n  const [index, setIndex] = useState(0);\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(3);\n  const [currentColor, setCurrentColor] = useState(0);\n  const [currentSize, setCurrentSize] = useState(0);\n  useEffect(() => {\n    handleGetProductDetail(+id);\n    handleGetListProducts();\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, []);\n  if (error.length) return /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 28\n  }, this);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 25\n  }, this); // hiển thị info\n\n  const {\n    avatar,\n    color,\n    description,\n    discount,\n    discountContent,\n    evaluate,\n    like,\n    name,\n    price,\n    promotion,\n    quantity,\n    questionAnswer,\n    ship,\n    size\n  } = detail;\n  const formatPrice = formatMoney(price);\n  const formatDiscount = formatMoney(discount);\n  const formatShip = formatMoney(ship);\n  const {\n    brand,\n    descriptContent,\n    subImage\n  } = description;\n  const selectImage = subImage[index];\n\n  const indicator = _.slice(subImage, start, end);\n\n  const handleClickChangeIndex = currentIndex => {\n    setIndex(currentIndex);\n  };\n\n  const handleClickNext = () => {\n    setIndex(index + 1);\n\n    if (index === end - 1) {\n      setStart(start + 3);\n      setEnd(end + 3);\n    }\n  };\n\n  const handleClickPrev = () => {\n    setIndex(index - 1);\n\n    if (index === start) {\n      setStart(start - 3);\n      setEnd(end - 3);\n    }\n  };\n\n  const selectColor = color[currentColor];\n  const selectSize = size[currentSize];\n\n  const handleClickChangeColor = index => {\n    setCurrentColor(index);\n  };\n\n  const handleClickChangeSize = index => {\n    setCurrentSize(index);\n  };\n\n  const handleClickIncrement = () => {\n    handleIncrement();\n  };\n\n  const handleClickDecrement = () => {\n    handleDecrement();\n  };\n\n  let listProduct = [];\n\n  _.forEach(products, item => {\n    listProduct = [...listProduct, products[Math.floor(Math.random() * products.length)]];\n  });\n\n  const uniqProduct = _.uniq(listProduct);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Trang Detail\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this) // <DetailWrapper\n  //   disabledPrev={index}\n  //   disabledNext={index === subImage.length - 1}\n  //   className=\"detail-wrapper\">\n  //   <TitlePage name=\"Thông tin sản phẩm\" />\n  //   <div className=\"container\">\n  //     <ProductDetailWrapper className=\"product-detail\">\n  //       <div className=\"slider-images\">\n  //         <img\n  //           src={selectImage.src}\n  //           alt={selectImage.src}\n  //         />\n  //         <ul\n  //           className=\"indicator\">\n  //           {indicator.map((item, index) => <IndicatorItem\n  //             indicatorItem={item}\n  //             key={item.id}\n  //             active={selectImage.id === item.id && \"active\"}\n  //             handleClickChangeIndex={\n  //               () => handleClickChangeIndex(index)\n  //             }\n  //           />)}\n  //           <li className=\"slider-prev\">\n  //             <Button\n  //               name={<FontAwesomeIcon icon={faAngleLeft} />}\n  //               className={`btn-prev ${index === 0 && 'disabled'}`}\n  //               onClick={handleClickPrev}\n  //               disabled={index === 0}\n  //             />\n  //           </li>\n  //           <li className=\"slider-next\">\n  //             <Button\n  //               name={<FontAwesomeIcon icon={faAngleRight} />}\n  //               className={`btn-next ${index === subImage.length - 1 && \"disabled\"}`}\n  //               onClick={handleClickNext}\n  //               disabled={index === subImage.length - 1}\n  //             />\n  //           </li>\n  //         </ul>\n  //       </div>\n  //       <div className=\"select-product\">\n  //         <h3 className=\"name-product\">\n  //           {name}\n  //         </h3>\n  //         <div className=\"evaluate\">\n  //           <ul className=\"star\">\n  //             {[1, 2, 3, 4, 5].map(item => <li\n  //               key={item}\n  //               className=\"star-item\"\n  //             >\n  //               <FontAwesomeIcon icon={faStar} />\n  //             </li>)}\n  //             <li className=\"evaluate-text\">\n  //               {evaluate} đánh giá\n  //             </li>\n  //           </ul>\n  //           <span className=\"like\">\n  //             <FontAwesomeIcon icon={faHeart} />\n  //           </span>\n  //         </div>\n  //         <h5 className=\"brand\">\n  //           Thương hiệu: <span className=\"name-brand\">\n  //             {brand}\n  //           </span>\n  //         </h5>\n  //         <img\n  //           className=\"sale\"\n  //           src=\"/assets/images/product/subImage/sale.webp\"\n  //           alt=\"sale\" />\n  //         <div className=\"price\">\n  //           <span className=\"price-item\">\n  //             {formatPrice} đ\n  //           </span>\n  //           {discount && <div className=\"price-discount\">\n  //             <span className=\"discount-item\">\n  //               {formatDiscount} đ\n  //             </span>\n  //             <span className=\"percent-discount\">\n  //               -{discountContent}%\n  //             </span>\n  //           </div>}\n  //         </div>\n  //         <hr />\n  //         <table\n  //           cellSpacing=\"30\"\n  //           cellPadding=\"30\">\n  //           <tbody>\n  //             <tr>\n  //               <td>Nhóm màu:</td>\n  //               <td>\n  //                 <ul className=\"list-select\">\n  //                   {color.map((item, index) => <SelectItem\n  //                     key={index}\n  //                     selectItem={item}\n  //                     active={selectColor === item && 'active'}\n  //                     handleClickChangeSelect={() => handleClickChangeColor(index)}\n  //                   />)}\n  //                 </ul>\n  //               </td>\n  //             </tr>\n  //             <tr>\n  //               <td>Size:</td>\n  //               <td>\n  //                 <ul className=\"list-select\">\n  //                   {size.map((item, index) => <SelectItem\n  //                     key={index}\n  //                     selectItem={item}\n  //                     active={selectSize === item && 'active'}\n  //                     handleClickChangeSelect={() => handleClickChangeSize(index)}\n  //                   />)}\n  //                 </ul>\n  //               </td>\n  //             </tr>\n  //             <tr>\n  //               <td>Số lương:</td>\n  //               <td>\n  //                 <Button\n  //                   name=\"-\"\n  //                   type=\"counter\"\n  //                   className={`decrement ${counter === 1 && 'disabled'}`}\n  //                   onClick={handleClickDecrement}\n  //                 />\n  //                 <span className=\"counter\">\n  //                   {counter}\n  //                 </span>\n  //                 <Button\n  //                   name=\"+\"\n  //                   type=\"counter\"\n  //                   className={`increment ${counter === 10 && 'disabled'}`}\n  //                   onClick={handleClickIncrement}\n  //                 />\n  //               </td>\n  //             </tr>\n  //           </tbody>\n  //         </table>\n  //         <div className=\"buy\">\n  //           <Button\n  //             name=\"MUA NGAY\"\n  //             type=\"buy\"\n  //             className=\"btn-buy\" />\n  //           <Button\n  //             name=\"THÊM VÀO GIỎ HÀNG\"\n  //             type=\"add to cart\"\n  //             className=\"btn-cart\" />\n  //         </div>\n  //       </div>\n  //       <SelectDeliveryWrapper className=\"select-delivery\">\n  //         <div className=\"select-delivery-header\">\n  //           <h6 className=\"title-select-delivery\">\n  //             Tùy chọn gian hàng\n  //           </h6>\n  //           <div className=\"deliery-modal\">\n  //             <span className=\"icon-delivery\">\n  //               <FontAwesomeIcon\n  //                 icon={faInfoCircle} />\n  //             </span>\n  //             <div className=\"box-modal-content\">\n  //               <h5 className=\"title-box\">\n  //                 Tùy chọn giao hàng\n  //               </h5>\n  //               <div className=\"paragraph\">\n  //                 <span className=\"icon\">\n  //                   <FontAwesomeIcon icon={faHandshake}\n  //                   />\n  //                 </span>\n  //                 <p className=\"paragraph-delivery\">\n  //                   <b>GH tiêu chuẩn</b>\n  //                   :Đối với hàng nội địa, bạn sẽ nhận được hàng trong 2-4 ngày làm việc.\n  //                   <br />\n  //                   Phí giao hàng sẽ được tính dựa trên tổng kích thước/khối lượng sản phẩm bạn đã mua từ nhà bán hàng.\n  //                 </p>\n  //               </div>\n  //               <div className=\"paragraph\">\n  //                 <span className=\"icon\">\n  //                   <FontAwesomeIcon icon={faMoneyBillWave}\n  //                   />\n  //                 </span>\n  //                 <p className=\"paragraph-delivery\">\n  //                   <b>Thanh toán khi nhận hàng. (Không được đồng kiểm)</b>\n  //                 </p>\n  //               </div>\n  //             </div>\n  //           </div>\n  //         </div>\n  //         <div className=\"select-delivery-body\">\n  //           <div className=\"ship delivery-item\">\n  //             <span className=\"icon\">\n  //               <FontAwesomeIcon icon={faHandshake}\n  //               />\n  //             </span>\n  //             <div className=\"info\">\n  //               <span>\n  //                 Giao hàng tiêu chuẩn\n  //               </span>\n  //               <p className=\"money-ship\">\n  //                 {ship ? formatShip + 'đ' : 'miễn phí'}\n  //               </p>\n  //               <span className=\"time-ship\">\n  //                 3 - 6 ngày\n  //               </span>\n  //             </div>\n  //           </div>\n  //           <div className=\"payment delivery-item\">\n  //             <span className=\"icon\">\n  //               <FontAwesomeIcon icon={faMoneyBillWave}\n  //               />\n  //             </span>\n  //             <p className=\"payment-text\">\n  //               Thanh toán khi nhận hàng. (Không được đồng kiểm)\n  //             </p>\n  //           </div>\n  //           <div className=\"delivery-item lie\">\n  //             <span className=\"icon\">\n  //               <FontAwesomeIcon icon={faHistory} />\n  //             </span>\n  //             <div className=\"lie-text\">\n  //               7 ngày trả hàng cho Nhà bán hàng\n  //               <p className=\"exception\">\n  //                 Không được trả hàng với lí do \"Không vừa ý\"\n  //               </p>\n  //             </div>\n  //           </div>\n  //           <div className=\"delivery-item security\">\n  //             <span className=\"icon\">\n  //               <FontAwesomeIcon icon={faBan} />\n  //             </span>\n  //             <p className=\"security-text\">\n  //               Không áp dụng chính sách bảo hành\n  //             </p>\n  //           </div>\n  //           <div className=\"delivery-item qr\">\n  //             <img className=\"code-qr\" src=\"/assets/images/QR/QR.png\" alt=\"qr\" />\n  //             <p className=\"qr-text\">\n  //               <span className=\"icon\">\n  //                 <FontAwesomeIcon icon={faMobileAlt} />\n  //               </span>\n  //               Quét mã QR để truy cập tới shop panda\n  //             </p>\n  //           </div>\n  //         </div>\n  //       </SelectDeliveryWrapper>\n  //     </ProductDetailWrapper>\n  //     <DescriptionProductWrapper className=\"description\">\n  //       <div className=\"description-product\">\n  //         <h5 className=\"title-descript\">\n  //           Mô tả sản phẩm {name}\n  //         </h5>\n  //         <p className=\"message\">\n  //           <span className=\"icon\">\n  //             <FontAwesomeIcon icon={faInfoCircle} />\n  //           </span>\n  //           Sản phẩm này là tài sản cá nhân được bán bởi Nhà Bán Hàng Cá Nhân và không thuộc đối tượng phải chịu thuế GTGT. Do đó hóa đơn VAT không được cấp trong trường hợp này.\n  //         </p>\n  //         {descriptContent.map(item => {\n  //           return <DescriptContent key={item.id} descriptContent={item} />\n  //         })}\n  //         {_.map(_.slice\n  //           (subImage, 0, 5), item => {\n  //             return <ImageProduct\n  //               imageProduct={item}\n  //               key={item.id} />\n  //           })}\n  //       </div>\n  //       <div className=\"adverProduct\">\n  //         <h3 className=\"title\">\n  //           Quảng cáo sản phẩm\n  //         </h3>\n  //           {_.map(_.slice(uniqProduct, 0, 6), item => {\n  //             return <SellingItem\n  //               history={history}\n  //               sellingItem={item}\n  //               key={item.id}\n  //               className=\"adv-product-item\"\n  //             />\n  //           })}\n  //       </div>\n  //     </DescriptionProductWrapper>\n  //     <ProductInvolveWrapper>\n  //       <h3 className=\"title\">\n  //         Sản phẩm liên quan\n  //       </h3>\n  //       <div className=\"row\">\n  //         {_.map(_.slice(uniqProduct, 0, 4), item => {\n  //           return <ProductItem\n  //             className=\"col-lg-3 col-md-4 col-sm-6\"\n  //             key={item.id}\n  //             item={item}\n  //             nameButton=\"Xem thông tin\"\n  //             history={history}\n  //             type=\"border\"\n  //           />\n  //         })}\n  //       </div>\n  //     </ProductInvolveWrapper>\n  //   </div>\n  // </DetailWrapper>\n  ;\n};\n\n_s(Detail, \"TIvdKdhuTovFvEJnqy+7rqn1lI8=\");\n\n_c5 = Detail;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: selectIsLoading(state),\n    detail: selectDetail(state),\n    error: selectError(state),\n    counter: selectCounter(state),\n    products: selectProducts(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleGetProductDetail: data => dispatch(getProductDetailRequest(data)),\n    handleIncrement: () => dispatch(handleIncrement()),\n    handleDecrement: () => dispatch(handleDecrement()),\n    handleGetListProducts: () => dispatch(getListProductRequest())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"IndicatorItem\");\n$RefreshReg$(_c2, \"SelectItem\");\n$RefreshReg$(_c3, \"DescriptContent\");\n$RefreshReg$(_c4, \"ImageProduct\");\n$RefreshReg$(_c5, \"Detail\");","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/Detail/index.js"],"names":["React","useEffect","useState","getProductDetailRequest","handleDecrement","handleIncrement","getListProductRequest","connect","selectDetail","selectIsLoading","selectError","selectCounter","selectProducts","Loading","SelectItems","DetailWrapper","IndicatorItems","ProductDetailWrapper","SelectDeliveryWrapper","DescriptionProductWrapper","DescriptContents","ImageProducts","ProductInvolveWrapper","_","forEach","FontAwesomeIcon","faAngleLeft","faAngleRight","faStar","faInfoCircle","faMoneyBillWave","faHistory","faBan","faMobileAlt","faHeart","faHandshake","Button","formatMoney","Empty","SellingItem","ProductItem","TitlePage","IndicatorItem","indicatorItem","active","handleClickChangeIndex","src","SelectItem","selectItem","handleClickChangeSelect","DescriptContent","descriptContent","name","ImageProduct","imageProduct","Detail","props","handleGetProductDetail","history","match","params","id","detail","isLoading","error","counter","handleGetListProducts","products","index","setIndex","start","setStart","end","setEnd","currentColor","setCurrentColor","currentSize","setCurrentSize","window","scrollTo","top","behavior","length","avatar","color","description","discount","discountContent","evaluate","like","price","promotion","quantity","questionAnswer","ship","size","formatPrice","formatDiscount","formatShip","brand","subImage","selectImage","indicator","slice","currentIndex","handleClickNext","handleClickPrev","selectColor","selectSize","handleClickChangeColor","handleClickChangeSize","handleClickIncrement","handleClickDecrement","listProduct","item","Math","floor","random","uniqProduct","uniq","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getProductDetailRequest,\r\n  handleDecrement,\r\n  handleIncrement,\r\n  getListProductRequest\r\n} from \"./action\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectDetail,\r\n  selectIsLoading,\r\n  selectError,\r\n  selectCounter,\r\n  selectProducts,\r\n} from \"./selector\";\r\nimport Loading from \"../Components/Loading\";\r\nimport {\r\n  SelectItems,\r\n  DetailWrapper,\r\n  IndicatorItems,\r\n  ProductDetailWrapper,\r\n  SelectDeliveryWrapper,\r\n  DescriptionProductWrapper,\r\n  DescriptContents,\r\n  ImageProducts,\r\n  ProductInvolveWrapper\r\n} from \"./style\";\r\nimport _, { forEach } from 'lodash';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faStar,\r\n  faInfoCircle,\r\n  faMoneyBillWave,\r\n  faHistory,\r\n  faBan,\r\n  faMobileAlt\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faHeart,\r\n  faHandshake\r\n} from \"@fortawesome/free-regular-svg-icons\"\r\nimport Button from \"./../../Component/Button\";\r\nimport { formatMoney } from \"./../../Component/Format\";\r\nimport Empty from \"../Components/Empty\";\r\nimport SellingItem from \"../Home/Component/SellingItem\";\r\nimport ProductItem from './../Home/Component/ProductItem'\r\nimport TitlePage from \"../../Component/Title\";\r\n\r\nconst IndicatorItem = ({\r\n  indicatorItem,\r\n  active,\r\n  handleClickChangeIndex\r\n}) => {\r\n  const { src } = indicatorItem;\r\n  return (\r\n    <IndicatorItems onClick={handleClickChangeIndex} className={`${active} indicator-item`}>\r\n      <img src={src} alt=\"indicator\" />\r\n    </IndicatorItems>\r\n  );\r\n}\r\n\r\nconst SelectItem = ({\r\n  selectItem,\r\n  active,\r\n  handleClickChangeSelect\r\n}) => {\r\n  return (\r\n    <SelectItems\r\n      className={`select-item ${active}`}\r\n      onClick={handleClickChangeSelect}\r\n    >\r\n      {selectItem}\r\n    </SelectItems>\r\n  );\r\n}\r\nconst DescriptContent = ({ descriptContent }) => {\r\n  const { name } = descriptContent;\r\n  return (\r\n    <DescriptContents className=\"descript-content\">\r\n      {name}\r\n    </DescriptContents>\r\n  );\r\n}\r\nconst ImageProduct = ({ imageProduct }) => {\r\n  const { src } = imageProduct;\r\n  return (\r\n    <ImageProducts src={src} />\r\n  );\r\n}\r\nconst Detail = (props) => {\r\n  const {\r\n    handleGetProductDetail,\r\n    history,\r\n    match: { params: { id } },\r\n    detail,\r\n    isLoading,\r\n    error,\r\n    counter,\r\n    handleIncrement,\r\n    handleDecrement,\r\n    handleGetListProducts,\r\n    products\r\n  } = props;\r\n  const [index, setIndex] = useState(0);\r\n  const [start, setStart] = useState(0);\r\n  const [end, setEnd] = useState(3);\r\n\r\n  const [currentColor, setCurrentColor] = useState(0);\r\n  const [currentSize, setCurrentSize] = useState(0)\r\n\r\n  useEffect(() => {\r\n    handleGetProductDetail(+id);\r\n    handleGetListProducts();\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    })\r\n\r\n  }, []);\r\n  if (error.length) return <Empty />\r\n  if (isLoading) return <Loading />\r\n  // hiển thị info\r\n\r\n  const {\r\n    avatar,\r\n    color,\r\n    description,\r\n    discount,\r\n    discountContent,\r\n    evaluate,\r\n    like,\r\n    name,\r\n    price,\r\n    promotion,\r\n    quantity,\r\n    questionAnswer,\r\n    ship,\r\n    size,\r\n  } = detail;\r\n  const formatPrice = formatMoney(price);\r\n  const formatDiscount = formatMoney(discount);\r\n  const formatShip = formatMoney(ship)\r\n  const { brand, descriptContent, subImage } = description;\r\n  const selectImage = subImage[index];\r\n  const indicator = _.slice(subImage, start, end);\r\n  const handleClickChangeIndex = currentIndex => {\r\n    setIndex(currentIndex);\r\n  }\r\n  const handleClickNext = () => {\r\n    setIndex(index + 1);\r\n    if (index === end - 1) {\r\n      setStart(start + 3);\r\n      setEnd(end + 3);\r\n\r\n    }\r\n  }\r\n  const handleClickPrev = () => {\r\n    setIndex(index - 1);\r\n    if (index === start) {\r\n      setStart(start - 3);\r\n      setEnd(end - 3);\r\n    }\r\n  }\r\n\r\n  const selectColor = color[currentColor];\r\n  const selectSize = size[currentSize];\r\n\r\n\r\n  const handleClickChangeColor = index => {\r\n    setCurrentColor(index);\r\n  }\r\n  const handleClickChangeSize = index => {\r\n    setCurrentSize(index);\r\n  }\r\n  const handleClickIncrement = () => {\r\n    handleIncrement();\r\n  }\r\n  const handleClickDecrement = () => {\r\n    handleDecrement();\r\n  }\r\n\r\n  let listProduct = [];\r\n  _.forEach(products, item => {\r\n    listProduct = [...listProduct, products[Math.floor(Math.random() * products.length)]]\r\n  });\r\n  const uniqProduct = _.uniq(listProduct);\r\n  return (\r\n\r\n    <div>Trang Detail</div>\r\n\r\n    // <DetailWrapper\r\n    //   disabledPrev={index}\r\n    //   disabledNext={index === subImage.length - 1}\r\n\r\n\r\n    //   className=\"detail-wrapper\">\r\n    //   <TitlePage name=\"Thông tin sản phẩm\" />\r\n    //   <div className=\"container\">\r\n    //     <ProductDetailWrapper className=\"product-detail\">\r\n    //       <div className=\"slider-images\">\r\n    //         <img\r\n    //           src={selectImage.src}\r\n    //           alt={selectImage.src}\r\n    //         />\r\n    //         <ul\r\n    //           className=\"indicator\">\r\n    //           {indicator.map((item, index) => <IndicatorItem\r\n    //             indicatorItem={item}\r\n    //             key={item.id}\r\n    //             active={selectImage.id === item.id && \"active\"}\r\n    //             handleClickChangeIndex={\r\n    //               () => handleClickChangeIndex(index)\r\n    //             }\r\n    //           />)}\r\n    //           <li className=\"slider-prev\">\r\n    //             <Button\r\n    //               name={<FontAwesomeIcon icon={faAngleLeft} />}\r\n    //               className={`btn-prev ${index === 0 && 'disabled'}`}\r\n    //               onClick={handleClickPrev}\r\n    //               disabled={index === 0}\r\n\r\n    //             />\r\n    //           </li>\r\n\r\n    //           <li className=\"slider-next\">\r\n    //             <Button\r\n    //               name={<FontAwesomeIcon icon={faAngleRight} />}\r\n    //               className={`btn-next ${index === subImage.length - 1 && \"disabled\"}`}\r\n    //               onClick={handleClickNext}\r\n    //               disabled={index === subImage.length - 1}\r\n\r\n    //             />\r\n    //           </li>\r\n    //         </ul>\r\n    //       </div>\r\n    //       <div className=\"select-product\">\r\n    //         <h3 className=\"name-product\">\r\n    //           {name}\r\n    //         </h3>\r\n    //         <div className=\"evaluate\">\r\n    //           <ul className=\"star\">\r\n    //             {[1, 2, 3, 4, 5].map(item => <li\r\n    //               key={item}\r\n    //               className=\"star-item\"\r\n    //             >\r\n    //               <FontAwesomeIcon icon={faStar} />\r\n    //             </li>)}\r\n    //             <li className=\"evaluate-text\">\r\n    //               {evaluate} đánh giá\r\n    //             </li>\r\n    //           </ul>\r\n    //           <span className=\"like\">\r\n    //             <FontAwesomeIcon icon={faHeart} />\r\n    //           </span>\r\n    //         </div>\r\n    //         <h5 className=\"brand\">\r\n    //           Thương hiệu: <span className=\"name-brand\">\r\n    //             {brand}\r\n    //           </span>\r\n    //         </h5>\r\n    //         <img\r\n    //           className=\"sale\"\r\n    //           src=\"/assets/images/product/subImage/sale.webp\"\r\n    //           alt=\"sale\" />\r\n    //         <div className=\"price\">\r\n    //           <span className=\"price-item\">\r\n    //             {formatPrice} đ\r\n    //           </span>\r\n    //           {discount && <div className=\"price-discount\">\r\n    //             <span className=\"discount-item\">\r\n    //               {formatDiscount} đ\r\n    //             </span>\r\n    //             <span className=\"percent-discount\">\r\n    //               -{discountContent}%\r\n    //             </span>\r\n    //           </div>}\r\n    //         </div>\r\n    //         <hr />\r\n    //         <table\r\n    //           cellSpacing=\"30\"\r\n    //           cellPadding=\"30\">\r\n    //           <tbody>\r\n    //             <tr>\r\n    //               <td>Nhóm màu:</td>\r\n    //               <td>\r\n    //                 <ul className=\"list-select\">\r\n    //                   {color.map((item, index) => <SelectItem\r\n    //                     key={index}\r\n    //                     selectItem={item}\r\n    //                     active={selectColor === item && 'active'}\r\n    //                     handleClickChangeSelect={() => handleClickChangeColor(index)}\r\n    //                   />)}\r\n    //                 </ul>\r\n    //               </td>\r\n    //             </tr>\r\n    //             <tr>\r\n    //               <td>Size:</td>\r\n    //               <td>\r\n    //                 <ul className=\"list-select\">\r\n    //                   {size.map((item, index) => <SelectItem\r\n    //                     key={index}\r\n    //                     selectItem={item}\r\n    //                     active={selectSize === item && 'active'}\r\n    //                     handleClickChangeSelect={() => handleClickChangeSize(index)}\r\n    //                   />)}\r\n    //                 </ul>\r\n    //               </td>\r\n    //             </tr>\r\n    //             <tr>\r\n    //               <td>Số lương:</td>\r\n    //               <td>\r\n    //                 <Button\r\n    //                   name=\"-\"\r\n    //                   type=\"counter\"\r\n    //                   className={`decrement ${counter === 1 && 'disabled'}`}\r\n    //                   onClick={handleClickDecrement}\r\n    //                 />\r\n    //                 <span className=\"counter\">\r\n    //                   {counter}\r\n    //                 </span>\r\n    //                 <Button\r\n    //                   name=\"+\"\r\n    //                   type=\"counter\"\r\n    //                   className={`increment ${counter === 10 && 'disabled'}`}\r\n    //                   onClick={handleClickIncrement}\r\n    //                 />\r\n    //               </td>\r\n    //             </tr>\r\n    //           </tbody>\r\n    //         </table>\r\n    //         <div className=\"buy\">\r\n    //           <Button\r\n    //             name=\"MUA NGAY\"\r\n    //             type=\"buy\"\r\n    //             className=\"btn-buy\" />\r\n    //           <Button\r\n    //             name=\"THÊM VÀO GIỎ HÀNG\"\r\n    //             type=\"add to cart\"\r\n    //             className=\"btn-cart\" />\r\n    //         </div>\r\n    //       </div>\r\n    //       <SelectDeliveryWrapper className=\"select-delivery\">\r\n    //         <div className=\"select-delivery-header\">\r\n    //           <h6 className=\"title-select-delivery\">\r\n    //             Tùy chọn gian hàng\r\n    //           </h6>\r\n    //           <div className=\"deliery-modal\">\r\n    //             <span className=\"icon-delivery\">\r\n    //               <FontAwesomeIcon\r\n    //                 icon={faInfoCircle} />\r\n    //             </span>\r\n    //             <div className=\"box-modal-content\">\r\n    //               <h5 className=\"title-box\">\r\n    //                 Tùy chọn giao hàng\r\n    //               </h5>\r\n    //               <div className=\"paragraph\">\r\n    //                 <span className=\"icon\">\r\n    //                   <FontAwesomeIcon icon={faHandshake}\r\n    //                   />\r\n    //                 </span>\r\n    //                 <p className=\"paragraph-delivery\">\r\n    //                   <b>GH tiêu chuẩn</b>\r\n    //                   :Đối với hàng nội địa, bạn sẽ nhận được hàng trong 2-4 ngày làm việc.\r\n    //                   <br />\r\n    //                   Phí giao hàng sẽ được tính dựa trên tổng kích thước/khối lượng sản phẩm bạn đã mua từ nhà bán hàng.\r\n    //                 </p>\r\n    //               </div>\r\n    //               <div className=\"paragraph\">\r\n    //                 <span className=\"icon\">\r\n    //                   <FontAwesomeIcon icon={faMoneyBillWave}\r\n    //                   />\r\n    //                 </span>\r\n    //                 <p className=\"paragraph-delivery\">\r\n\r\n    //                   <b>Thanh toán khi nhận hàng. (Không được đồng kiểm)</b>\r\n    //                 </p>\r\n    //               </div>\r\n    //             </div>\r\n    //           </div>\r\n\r\n    //         </div>\r\n    //         <div className=\"select-delivery-body\">\r\n    //           <div className=\"ship delivery-item\">\r\n    //             <span className=\"icon\">\r\n    //               <FontAwesomeIcon icon={faHandshake}\r\n    //               />\r\n    //             </span>\r\n    //             <div className=\"info\">\r\n    //               <span>\r\n    //                 Giao hàng tiêu chuẩn\r\n    //               </span>\r\n    //               <p className=\"money-ship\">\r\n    //                 {ship ? formatShip + 'đ' : 'miễn phí'}\r\n    //               </p>\r\n    //               <span className=\"time-ship\">\r\n    //                 3 - 6 ngày\r\n    //               </span>\r\n    //             </div>\r\n    //           </div>\r\n    //           <div className=\"payment delivery-item\">\r\n    //             <span className=\"icon\">\r\n    //               <FontAwesomeIcon icon={faMoneyBillWave}\r\n    //               />\r\n    //             </span>\r\n    //             <p className=\"payment-text\">\r\n    //               Thanh toán khi nhận hàng. (Không được đồng kiểm)\r\n    //             </p>\r\n    //           </div>\r\n    //           <div className=\"delivery-item lie\">\r\n    //             <span className=\"icon\">\r\n    //               <FontAwesomeIcon icon={faHistory} />\r\n    //             </span>\r\n    //             <div className=\"lie-text\">\r\n    //               7 ngày trả hàng cho Nhà bán hàng\r\n    //               <p className=\"exception\">\r\n    //                 Không được trả hàng với lí do \"Không vừa ý\"\r\n    //               </p>\r\n    //             </div>\r\n    //           </div>\r\n    //           <div className=\"delivery-item security\">\r\n    //             <span className=\"icon\">\r\n    //               <FontAwesomeIcon icon={faBan} />\r\n    //             </span>\r\n    //             <p className=\"security-text\">\r\n    //               Không áp dụng chính sách bảo hành\r\n    //             </p>\r\n    //           </div>\r\n    //           <div className=\"delivery-item qr\">\r\n    //             <img className=\"code-qr\" src=\"/assets/images/QR/QR.png\" alt=\"qr\" />\r\n    //             <p className=\"qr-text\">\r\n    //               <span className=\"icon\">\r\n    //                 <FontAwesomeIcon icon={faMobileAlt} />\r\n    //               </span>\r\n    //               Quét mã QR để truy cập tới shop panda\r\n    //             </p>\r\n    //           </div>\r\n    //         </div>\r\n    //       </SelectDeliveryWrapper>\r\n\r\n    //     </ProductDetailWrapper>\r\n    //     <DescriptionProductWrapper className=\"description\">\r\n    //       <div className=\"description-product\">\r\n    //         <h5 className=\"title-descript\">\r\n    //           Mô tả sản phẩm {name}\r\n    //         </h5>\r\n    //         <p className=\"message\">\r\n    //           <span className=\"icon\">\r\n    //             <FontAwesomeIcon icon={faInfoCircle} />\r\n    //           </span>\r\n    //           Sản phẩm này là tài sản cá nhân được bán bởi Nhà Bán Hàng Cá Nhân và không thuộc đối tượng phải chịu thuế GTGT. Do đó hóa đơn VAT không được cấp trong trường hợp này.\r\n    //         </p>\r\n    //         {descriptContent.map(item => {\r\n    //           return <DescriptContent key={item.id} descriptContent={item} />\r\n    //         })}\r\n    //         {_.map(_.slice\r\n    //           (subImage, 0, 5), item => {\r\n    //             return <ImageProduct\r\n    //               imageProduct={item}\r\n    //               key={item.id} />\r\n    //           })}\r\n    //       </div>\r\n    //       <div className=\"adverProduct\">\r\n    //         <h3 className=\"title\">\r\n    //           Quảng cáo sản phẩm\r\n    //         </h3>\r\n    //           {_.map(_.slice(uniqProduct, 0, 6), item => {\r\n    //             return <SellingItem\r\n    //               history={history}\r\n    //               sellingItem={item}\r\n    //               key={item.id}\r\n    //               className=\"adv-product-item\"\r\n    //             />\r\n    //           })}\r\n    //       </div>\r\n    //     </DescriptionProductWrapper>\r\n\r\n    //     <ProductInvolveWrapper>\r\n    //       <h3 className=\"title\">\r\n    //         Sản phẩm liên quan\r\n    //       </h3>\r\n    //       <div className=\"row\">\r\n\r\n    //         {_.map(_.slice(uniqProduct, 0, 4), item => {\r\n    //           return <ProductItem\r\n    //             className=\"col-lg-3 col-md-4 col-sm-6\"\r\n    //             key={item.id}\r\n    //             item={item}\r\n    //             nameButton=\"Xem thông tin\"\r\n    //             history={history}\r\n    //             type=\"border\"\r\n    //           />\r\n    //         })}\r\n    //       </div>\r\n    //     </ProductInvolveWrapper>\r\n\r\n    //   </div>\r\n    // </DetailWrapper>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: selectIsLoading(state),\r\n    detail: selectDetail(state),\r\n    error: selectError(state),\r\n    counter: selectCounter(state),\r\n    products: selectProducts(state)\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleGetProductDetail: data => dispatch(getProductDetailRequest(data)),\r\n    handleIncrement: () => dispatch(handleIncrement()),\r\n    handleDecrement: () => dispatch(handleDecrement()),\r\n    handleGetListProducts: () => dispatch(getListProductRequest())\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);"]},"metadata":{},"sourceType":"module"}