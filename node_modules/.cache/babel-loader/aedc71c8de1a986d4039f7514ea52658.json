{"ast":null,"code":"import { call, takeEvery, takeLatest, all, delay, fork, put } from 'redux-saga/effects';\nimport { getListProductSuccess } from './actions';\nimport { GET_LIST_PRODUCT_REQUEST } from './constants';\nimport { getListProductApi } from './service';\n\nfunction* getListProductProcess(params) {\n  try {\n    const respon = yield call(getListProductApi);\n\n    if (respon.status === 200) {\n      yield put(getListProductSuccess(respon.data)); // dispatch action to reducer\n    }\n  } catch (err) {\n    console.log('err', err);\n  }\n}\n\nfunction* watchGetListProduct() {\n  yield takeLatest(GET_LIST_PRODUCT_REQUEST, getListProductProcess);\n}\n\nfunction* watchAll() {\n  yield all([watchGetListProduct()]);\n  console.log('call saga');\n}\n\nexport default watchAll;","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/Home/saga.js"],"names":["call","takeEvery","takeLatest","all","delay","fork","put","getListProductSuccess","GET_LIST_PRODUCT_REQUEST","getListProductApi","getListProductProcess","params","respon","status","data","err","console","log","watchGetListProduct","watchAll"],"mappings":"AAAA,SACEA,IADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,GAPF,QAQO,oBARP;AASA,SAASC,qBAAT,QAAsC,WAAtC;AACA,SAASC,wBAAT,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,WAAlC;;AACA,UAAUC,qBAAV,CAAgCC,MAAhC,EAAwC;AACtC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACS,iBAAD,CAAzB;;AACA,QAAIG,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACzB,YAAMP,GAAG,CAACC,qBAAqB,CAACK,MAAM,CAACE,IAAR,CAAtB,CAAT,CADyB,CAEzB;AACD;AACF,GAND,CAME,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACD;AACF;;AACD,UAAUG,mBAAV,GAAgC;AAC9B,QAAMhB,UAAU,CAACM,wBAAD,EAA2BE,qBAA3B,CAAhB;AACD;;AACD,UAAUS,QAAV,GAAqB;AACnB,QAAMhB,GAAG,CAAC,CAACe,mBAAmB,EAApB,CAAD,CAAT;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACD,eAAeE,QAAf","sourcesContent":["import {\r\n  call,\r\n  takeEvery,\r\n  takeLatest,\r\n  all,\r\n  delay,\r\n  fork,\r\n  put\r\n} from 'redux-saga/effects';\r\nimport { getListProductSuccess } from './actions'\r\nimport { GET_LIST_PRODUCT_REQUEST } from './constants';\r\nimport { getListProductApi } from './service'\r\nfunction* getListProductProcess(params) {\r\n  try {\r\n    const respon = yield call(getListProductApi);\r\n    if (respon.status === 200) {\r\n      yield put(getListProductSuccess(respon.data));\r\n      // dispatch action to reducer\r\n    }\r\n  } catch (err) {\r\n    console.log('err', err);\r\n  }\r\n}\r\nfunction* watchGetListProduct() {\r\n  yield takeLatest(GET_LIST_PRODUCT_REQUEST, getListProductProcess)\r\n}\r\nfunction* watchAll() {\r\n  yield all([watchGetListProduct()]);\r\n  console.log('call saga');\r\n}\r\nexport default watchAll;"]},"metadata":{},"sourceType":"module"}