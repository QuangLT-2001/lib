{"ast":null,"code":"import { all, takeEvery, takeLatest, put, call, delay } from \"redux-saga/effects\";\nimport { getListProductCartSuccess, getListProductCartFailed, deleteProductCartSuccess, deleteProductCartFailed } from \"./actions\";\nimport { GET_LIST_PRODUCT_CART_REQUEST, DELETE_PRODUCT_CART_REQUEST } from \"./contants\";\nimport { getListProductCartApi, deleteProductCartApi, putProductCartApi } from \"./service\";\n\nfunction* getListProductCartProcess(params) {\n  try {\n    const respon = yield call(getListProductCartApi);\n\n    if (respon.status === 200 || respon.status === 201) {\n      yield put(getListProductCartSuccess(respon.data));\n    } else {\n      yield put(getListProductCartFailed());\n    }\n  } catch (err) {\n    yield put(getListProductCartFailed());\n  }\n}\n\nfunction* watchGetListProductCart() {\n  yield takeEvery(GET_LIST_PRODUCT_CART_REQUEST, getListProductCartProcess);\n}\n\nfunction* deleteProductCartProcess(params) {\n  try {\n    const {\n      data\n    } = params;\n    const respon = yield call(deleteProductCartApi, data);\n\n    if (respon.status === 200 || respon.status === 201) {\n      yield put(deleteProductCartSuccess(respon.data));\n    } else {\n      yield put(deleteProductCartFailed());\n    }\n  } catch (err) {\n    yield put(deleteProductCartFailed());\n  }\n}\n\nfunction* watchDeleteProductCart() {\n  yield takeLatest(DELETE_PRODUCT_CART_REQUEST, deleteProductCartProcess);\n}\n\nfunction* watchAll() {\n  yield all([watchGetListProductCart(), watchDeleteProductCart()]);\n}\n\nexport default watchAll;","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/Cart/saga.js"],"names":["all","takeEvery","takeLatest","put","call","delay","getListProductCartSuccess","getListProductCartFailed","deleteProductCartSuccess","deleteProductCartFailed","GET_LIST_PRODUCT_CART_REQUEST","DELETE_PRODUCT_CART_REQUEST","getListProductCartApi","deleteProductCartApi","putProductCartApi","getListProductCartProcess","params","respon","status","data","err","watchGetListProductCart","deleteProductCartProcess","watchDeleteProductCart","watchAll"],"mappings":"AAAA,SACEA,GADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,KANF,QAOO,oBAPP;AAQA,SACEC,yBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,uBAJF,QAKO,WALP;AAMA,SACEC,6BADF,EAEEC,2BAFF,QAGO,YAHP;AAIA,SACEC,qBADF,EAEEC,oBAFF,EAGEC,iBAHF,QAIO,WAJP;;AAKA,UAAUC,yBAAV,CAAoCC,MAApC,EAA4C;AAC1C,MAAI;AACF,UAAMC,MAAM,GAAI,MAAMb,IAAI,CAACQ,qBAAD,CAA1B;;AACA,QAAGK,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAkB,GAA9C,EAAmD;AACjD,YAAMf,GAAG,CAACG,yBAAyB,CAACW,MAAM,CAACE,IAAR,CAA1B,CAAT;AACD,KAFD,MAEM;AACJ,YAAMhB,GAAG,CAACI,wBAAwB,EAAzB,CAAT;AACD;AACF,GAPD,CAOE,OAAOa,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAACI,wBAAwB,EAAzB,CAAT;AACD;AACF;;AACD,UAAUc,uBAAV,GAAoC;AAClC,QAAMpB,SAAS,CAACS,6BAAD,EAAgCK,yBAAhC,CAAf;AACD;;AAED,UAAUO,wBAAV,CAAmCN,MAAnC,EAA2C;AACzC,MAAI;AACF,UAAM;AAACG,MAAAA;AAAD,QAASH,MAAf;AACA,UAAMC,MAAM,GAAG,MAAMb,IAAI,CAACS,oBAAD,EAAuBM,IAAvB,CAAzB;;AACA,QAAGF,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAkB,GAA9C,EAAmD;AACjD,YAAMf,GAAG,CAACK,wBAAwB,CAACS,MAAM,CAACE,IAAR,CAAzB,CAAT;AACD,KAFD,MAEM;AACJ,YAAMhB,GAAG,CAACM,uBAAuB,EAAxB,CAAT;AACD;AACF,GARD,CAQC,OAAOW,GAAP,EAAY;AACX,UAAMjB,GAAG,CAACM,uBAAuB,EAAxB,CAAT;AACD;AACF;;AACD,UAAUc,sBAAV,GAAmC;AACjC,QAAMrB,UAAU,CAACS,2BAAD,EAA8BW,wBAA9B,CAAhB;AACD;;AAED,UAAUE,QAAV,GAAqB;AACnB,QAAMxB,GAAG,CAAC,CACRqB,uBAAuB,EADf,EAERE,sBAAsB,EAFd,CAAD,CAAT;AAID;;AACD,eAAeC,QAAf","sourcesContent":["import {\r\n  all,\r\n  takeEvery,\r\n  takeLatest,\r\n  put,\r\n  call,\r\n  delay,\r\n} from \"redux-saga/effects\";\r\nimport {\r\n  getListProductCartSuccess,\r\n  getListProductCartFailed,\r\n  deleteProductCartSuccess,\r\n  deleteProductCartFailed\r\n} from \"./actions\";\r\nimport {\r\n  GET_LIST_PRODUCT_CART_REQUEST,\r\n  DELETE_PRODUCT_CART_REQUEST\r\n} from \"./contants\";\r\nimport {\r\n  getListProductCartApi,\r\n  deleteProductCartApi,\r\n  putProductCartApi\r\n} from \"./service\";\r\nfunction* getListProductCartProcess(params) {\r\n  try {\r\n    const respon  = yield call(getListProductCartApi);\r\n    if(respon.status === 200 || respon.status === 201) {\r\n      yield put(getListProductCartSuccess(respon.data))\r\n    }else {\r\n      yield put(getListProductCartFailed())\r\n    }\r\n  } catch (err) {\r\n    yield put(getListProductCartFailed())\r\n  }\r\n}\r\nfunction* watchGetListProductCart() {\r\n  yield takeEvery(GET_LIST_PRODUCT_CART_REQUEST, getListProductCartProcess);\r\n}\r\n\r\nfunction* deleteProductCartProcess(params) {\r\n  try {\r\n    const {data} = params;\r\n    const respon = yield call(deleteProductCartApi, data);\r\n    if(respon.status === 200 || respon.status === 201) {\r\n      yield put(deleteProductCartSuccess(respon.data))\r\n    }else {\r\n      yield put(deleteProductCartFailed())\r\n    }\r\n  }catch (err) {\r\n    yield put(deleteProductCartFailed())\r\n  }\r\n}\r\nfunction* watchDeleteProductCart() {\r\n  yield takeLatest(DELETE_PRODUCT_CART_REQUEST, deleteProductCartProcess)\r\n}\r\n\r\nfunction* watchAll() {\r\n  yield all([\r\n    watchGetListProductCart(),\r\n    watchDeleteProductCart()\r\n  ])\r\n}\r\nexport default watchAll;"]},"metadata":{},"sourceType":"module"}