{"ast":null,"code":"import _regeneratorRuntime from\"D:/Tai lieu/ReactJS/shop-clothes - Copy/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(getListPostProcess),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(watchListPost),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(watchAll);import{call,takeLatest,takeEvery,put,fork,all,delay}from\"redux-saga/effects\";import{GET_LIST_POST_REQUEST,GET_POST_ID_REQUEST}from\"./constants\";import{getListPostSuccess,getListPostFailed,getPostIdSuccess,getPostIdFailed}from\"./actions\";import{getListPostApi,getPostIdApi}from\"./service\";function getListPostProcess(params){var respon;return _regeneratorRuntime.wrap(function getListPostProcess$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(getListPostApi);case 3:respon=_context.sent;if(!(respon.status===200)){_context.next=9;break;}_context.next=7;return put(getListPostSuccess(respon.data));case 7:_context.next=11;break;case 9:_context.next=11;return put(getListPostFailed());case 11:_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);_context.next=17;return put(getListPostFailed());case 17:case\"end\":return _context.stop();}}},_marked,null,[[0,13]]);}function watchListPost(){return _regeneratorRuntime.wrap(function watchListPost$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(GET_LIST_POST_REQUEST,getListPostProcess);case 2:case\"end\":return _context2.stop();}}},_marked2);}function watchAll(){return _regeneratorRuntime.wrap(function watchAll$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([watchListPost()]);case 2:case\"end\":return _context3.stop();}}},_marked3);}export default watchAll;","map":{"version":3,"sources":["D:/Tai lieu/ReactJS/shop-clothes - Copy/src/container/ListPost/saga.js"],"names":["getListPostProcess","watchListPost","watchAll","call","takeLatest","takeEvery","put","fork","all","delay","GET_LIST_POST_REQUEST","GET_POST_ID_REQUEST","getListPostSuccess","getListPostFailed","getPostIdSuccess","getPostIdFailed","getListPostApi","getPostIdApi","params","respon","status","data"],"mappings":"mKAuBUA,kB,iDAaAC,a,iDAGAC,Q,EAvCV,OACEC,IADF,CAEEC,UAFF,CAGEC,SAHF,CAIEC,GAJF,CAKEC,IALF,CAMEC,GANF,CAOEC,KAPF,KAQO,oBARP,CASA,OACEC,qBADF,CAEEC,mBAFF,KAGO,aAHP,CAIA,OACEC,kBADF,CAEEC,iBAFF,CAGEC,gBAHF,CAIEC,eAJF,KAKO,WALP,CAMA,OACEC,cADF,CAEEC,YAFF,KAGO,WAHP,CAIA,QAAUjB,CAAAA,kBAAV,CAA6BkB,MAA7B,wKAEmB,MAAMf,CAAAA,IAAI,CAACa,cAAD,CAAV,CAFnB,OAEUG,MAFV,oBAGQA,MAAM,CAACC,MAAP,GAAkB,GAH1B,0CAIM,MAAMd,CAAAA,GAAG,CAACM,kBAAkB,CAACO,MAAM,CAACE,IAAR,CAAnB,CAAT,CAJN,sDAMM,MAAMf,CAAAA,GAAG,CAACO,iBAAiB,EAAlB,CAAT,CANN,0GAUI,MAAMP,CAAAA,GAAG,CAACO,iBAAiB,EAAlB,CAAT,CAVJ,qEAaA,QAAUZ,CAAAA,aAAV,6IACE,MAAMG,CAAAA,UAAU,CAACM,qBAAD,CAAwBV,kBAAxB,CAAhB,CADF,wDAGA,QAAUE,CAAAA,QAAV,wIACE,MAAMM,CAAAA,GAAG,CAAC,CACRP,aAAa,EADL,CAAD,CAAT,CADF,wDAMA,cAAeC,CAAAA,QAAf","sourcesContent":["import {\r\n  call,\r\n  takeLatest,\r\n  takeEvery,\r\n  put,\r\n  fork,\r\n  all,\r\n  delay\r\n} from \"redux-saga/effects\";\r\nimport {\r\n  GET_LIST_POST_REQUEST,\r\n  GET_POST_ID_REQUEST\r\n} from \"./constants\";\r\nimport {\r\n  getListPostSuccess,\r\n  getListPostFailed,\r\n  getPostIdSuccess,\r\n  getPostIdFailed\r\n} from \"./actions\";\r\nimport {\r\n  getListPostApi,\r\n  getPostIdApi\r\n} from \"./service\";\r\nfunction* getListPostProcess(params) {\r\n  try {\r\n    const respon = yield call(getListPostApi);\r\n    if (respon.status === 200) {\r\n      yield put(getListPostSuccess(respon.data))\r\n    } else {\r\n      yield put(getListPostFailed())\r\n    }\r\n\r\n  } catch (err) {\r\n    yield put(getListPostFailed())\r\n  }\r\n}\r\nfunction* watchListPost() {\r\n  yield takeLatest(GET_LIST_POST_REQUEST, getListPostProcess);\r\n}\r\nfunction* watchAll() {\r\n  yield all([\r\n    watchListPost()\r\n  ])\r\n}\r\n\r\nexport default watchAll;"]},"metadata":{},"sourceType":"module"}